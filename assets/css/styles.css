:root {
    --primary-color: #29292c;
    --cinza-claro: #eee;
    --cinza-escuro: #58585cf4;
    --gap: 3rem
}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

html {
    font-size: 62.5%;
    scroll-behavior: smooth;
}

body {
    font-family: "Taviraj", serif;
    font-size: 1.6em;
    color: var(--primary-color);
}

h1,
h2,
h4,
h5,
h6 {
    font-family: "Ultra", serif;
}

h1 {
    font-size: 6rem;
    text-transform: uppercase;
}

h2 {
    font-size: 4rem;
    margin-bottom: 3rem;
}

h3 {
    font-size: 2rem;
    margin-bottom: 0.5rem;
}

h4 {
    font-size: 4.5rem;
}

h5 {
    font-size: 4rem;
}

h6 {
    font-size: 3.5rem;
}

a {
    text-decoration: none;
}

p {
    margin-bottom: 2rem;
}

table {
    min-width: 36rem;
    width: 100%;
    border-collapse: collapse;
}

table caption {
    font-style: italic;
    font-size: 1.3rem;
    text-align: left;
}

table td, table th {
    /**white-space: nowrap = serve para não quebrar o texto quando a tabela diminuir. Não vou usar aqui**/
    padding: 0.5rem;
    border: 0.1rem solid var(--cinza-escuro);
    text-align: center;
}

tfoot td, table th {
    background: var(--cinza-claro);
}

.main-bg {
    background-image: url(../img/main-bg.svg);
    /** Os dois pontos é para subir a pasta. Pq se não colocar ele vai procurar na pasta do css**/
    background-size: cover;
    background-position: center center;
    /** Para redimencionar a imagem do bacjground conforme eu diminui a pagina**/
    color: #FFFFFF;
}

.white-bg {
    background-color: #FFFFFF;
    color: var(--primary-color);
}

.main-content {
    max-width: 120rem;
    margin: 0 auto;
    padding: 5rem var(--gap);


}

.section {
    min-height: 100vh;
}

.menu-spacing {
    height: 15rem
}

.menu {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    width: 100%;
    z-index: 1;
    border-bottom: 0.1rem solid var(--cinza-claro);
}

.menu-content {
    display: flex;
    /**Para colocar tudo na mesma linha**/
    justify-content: space-between;
    /** Para colocar um espaço entre o logo e as outras opçãoes **/
    align-items: center;
    padding-top: 0;
    padding-bottom: 0;
}

.menu-content h1 img {
    height: 70px;
}

.menu h1 {
    font-size: 3rem;
    color: var(--primary-color);
    font-style: oblique;
}

.menu h1 a {
    color: inherit;
    /**inherit significa que o 'a' vai herdar a propriedade (cor nesse caso) do seu pai, que é o h1**/
}

.menu ul {
    list-style: none;
    display: flex;
}

.menu ul li a {
    display: block;
    padding: 2rem;
    font-size: 1.8rem;
    font-style: oblique;
    color: var(--primary-color);
    position: relative;

}

.menu ul li a::after {
    content: '';
    position: absolute;
    bottom: 1rem;
    left: 50%;
    width: 0;
    height: 0.2rem;
    background: var(--cinza-escuro);
    transition: all 300ms ease-in-out;
}

.menu ul li a:hover::after {
    left: 25%;
    width: 50%;
}

.intro-content {
    position: relative;
    /**Position relative significa que a posição desse elemento deve ser em relação com a posiçao do seu elemento pai**/
    top: -8rem;
    display: grid;
    grid-template-columns: 1fr 1.5fr;
    /**Para dizer quantas colunas vai ter**/
    gap: var(--gap);
    /**Para dar espaço entre as colunas do display grid**/
    min-height: 130vh;
    padding-top: 20rem;
}

.intro-text-content,
.intro-img {
    display: flex;
    flex-flow: column wrap;
    justify-content: center;
}

.intro-img img {
    max-width: 100%;
    height: auto;
}

.top3-content {
    max-width: 120rem;
    display: flex;
    /**flex-flow: column wrap;**/
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: center;
    min-height: 100vh;
    text-align: center;
    padding-top: 10rem;
}

.grid-one-content {
    display: flex;
    flex-flow: column wrap;
    justify-content: center;
    min-height: 100vh;
    padding-top: 10rem;
}

.grid-one-content h2 {
    margin-bottom: 7rem;
    align-self: center;
}

.grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    /**O reapete é para dizer quantas colunas vai ter e qual o espaço delas. Nesse caso, 3 colunas com o espaço de 1fr cada**/
    gap: var(--gap);
    counter-reset: grid-counter;
}

.grid h3 {
    font-size: 2.3rem;
    position: relative;
    padding-left: 5rem;
    padding-bottom: 2rem;
}

.grid h3::before {
    counter-increment: grid-counter;
    content: counter(grid-counter);
    position: absolute;
    font-size: 8rem;
    font-style: italic;
    top: -4rem;
    left: -2rem;
    transform: rotate(5deg);
}

.gallerry-image {
    width: 100%;
    max-width: 36rem;
    max-height: 36rem;
    overflow: hidden;
}

.gallerry-head h2 {
    margin-top: 4rem;
}

.gallerry-image img {
    width: inherit;
    height: inherit;
    transition: all 300ms ease-in-out;
}

.gallerry-image img:hover {
    transform: translate(-3%, 3%) scale(1.2) rotate(5deg);
}

.responsive-table {
    overflow: hidden;
    overflow-x: auto;
}

.contact-content {
    position: relative;
    /**Position relative significa que a posição desse elemento deve ser em relação com a posiçao do seu elemento pai**/
    display: grid;
    grid-template-columns: 1fr 1.5fr;
    /**Para dizer quantas colunas vai ter**/
    gap: var(--gap);
    /**Para dar espaço entre as colunas do display grid**/
    min-height: 130vh;
}

.contact-img img {
    max-width: 90%;
    height: auto;
    margin-top: 6rem;
}
.contact-form {
    grid-column: span 2;
}

.contact-form .form-grid {
    border: none;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: var(--gap);
}

.form-grid legend {
    font-style: italic;
    font-size: 1.8rem;
    margin-bottom: 3rem;
}

.form-group {
    flex: 1 1 32rem;
}

.form-group label {
    display: block;
    margin-bottom: 1rem;
    font-size: 1.7rem;
}

.form-group input,
.form-group textarea {
    border: none;
    background: white;
    padding: 1.5rem 2rem;
    width: 100%;
    font-size: 1.6rem;
    outline: none;
    font-family: "Taviraj";
}

.form-group input:focus,
.form-group textarea:focus {
    box-shadow: 0 0 1.6rem 0.2rem rgb(184, 109, 11);
}

body .full-width {
    width: 100%;
    flex: 1 1 100%;
}

.form-group button {
    border: 0.5rem solid white;
    background: none;
    color: white;
    padding: 1.5rem 2rem;
    font-size: 1.5rem;
    cursor: pointer;
    transition: all 300ms ease-in-out;
}
.form-group button:hover {
    background: white;
    color: var(--primary-color);
}

.footer {
    text-align: center;
    font-size: 1.6rem;
}

.footer a {
    color: var(--cinza-escuro);
}

.footer p {
    margin: 0;
    padding: 2.5rem;
}

.close-menu {
 display: none;
}

.back-to-top {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    background: white;
    width: 4rem;
    height: 4rem;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    color: var(--primary-color);
    transform: rotate(-90deg);
    border: 0.1rem solid var(--primary-color);
}

@media (max-width: 80rem) {
    
    .intro-content, .grid {
        grid-template-columns: 1fr;
    }

    .gallerry-image {
        width: 100%;
        max-width: 100%;
        max-height: 100%;
    }

    .gallerry-image img {
        width: 100%;
    }

    .grid-one-content {
        display: block;
    }

    .menu {
        bottom: 0;
        text-align: center;
        display: none;
    }

    .menu-content,
    .menu-content ul {
        flex-direction: column;
        justify-content: center;
    }

    .menu-content {
        height: 100vh;
    }

    .close-menu-label::after {
        content: '☰';
        position: fixed;
        z-index: 2;
        top: 2rem;
        right: 2rem;
        background-color: var(--primary-color);
        color: white;
        font-size: 3rem;
        line-height: 3rem;
        width: 3rem;
        height: 3rem;
        text-align: center;
        padding: 0.5rem;
        cursor: pointer;
    }

    .close-menu:checked~.menu {
        display: block;
    }

    .close-menu:checked~.close-menu-label::after {
        content: '×';
    }

    .menu-spacing {
        display: none;
    }
}